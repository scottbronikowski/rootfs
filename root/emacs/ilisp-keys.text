C-Z 1     popper-bury-window
C-Z v     popper-scroll-output          c-U n (amount)
C-Z G     popper-grow-output            c-U n (amount)
C-Z b     switch-to-lisp                c-U (end of buffer)
C-M-l     previous-buffer-lisp          c-U n (nth previous)
C-Z s     status-lisp                   c-U (pending)
RETURN    return-ilisp
c-]       close-and-send
LINE      newline-and-indent-lisp
C-Z e     eval-defun-lisp               c-U (insert)
C-M-x     eval-defun-lisp               c-U (insert)
C-Z C-e   eval-defun-and-go-lisp        c-U (insert)
C-Z r     eval-region-lisp              c-U (insert)
C-Z C-r   eval-region-and-go-lisp       c-U (insert)
C-Z n     eval-next-sexp-lisp           c-U (insert)
C-Z C-n   eval-next-sexp-and-go-lisp    c-U (insert)
C-Z c     compile-defun-lisp            c-U (insert)
C-Z C-c   compile-defun-and-go-lisp     c-U (insert)
C-Z w     compile-region-lisp           c-U (insert)
C-Z C-w   compile-region-and-go-lisp    c-U (insert)
C-Z a     arglist-lisp                  c-U (insert)
C-Z d     documentation-lisp            c-U (insert) c-U - (type)
C-Z i     describe-lisp
C-Z D     fi:clman
C-Z A     fi:clman-apropos
C-Z M     macroexpand-lisp              c-U (insert) c-U - (prompt)
C-Z m     macroexpand-1-lisp            c-U (insert) c-U - (prompt)
C-Z t     trace-defun-lisp              c-U (untrace) c-U - (prompt)
C-Z p     package-lisp
C-Z P     set-package-lisp              c-U (prompt)
          set-buffer-package-lisp       c-U (prompt)
          lisp-directory                c-U (append) c-U - (all buffers)
M-.       edit-definitions-lisp         c-U - (switch default vs prompt)
M-,       next-definitions-lisp         c-U (previous)
C-Z ^     edit-callers-lisp             c-U - (switch default vs prompt)
M-`       next-caller-lisp
          who-calls-lisp                c-U - (switch default vs prompt)
M-?       search-lisp                   c-U (use regexp)
M-"       replace-lisp                  c-U (use regexp)
C-Z SPACE mark-change-lisp              c-U (unmark changes)
C-Z * e   eval-changes-lisp             c-U (keep changes)
C-Z * c   compile-changes-lisp          c-U (keep changes)
C-Z * 0   clear-changes-lisp
C-Z * 1   list-changes-lisp
C-X C-f   find-file-lisp
C-Z l     load-file-lisp
C-Z k     compile-file-lisp
C-Z !     default-directory-lisp
C-c C-c   interrupt-subjob-ilisp
C-Z g     abort-commands-lisp
C-Z z     reset-ilisp
C-d       delete-char-or-pop-ilisp
M-n       comint-next-input
M-p       comint-previous-inpt
M-s       comint-previous-similar-input
M-N       comint-psearch-input
M-P       comint-msearch-input
C-c R     comint-msearch-input-matching
M-TAB     complete-lisp                 c-U (all completions) c-U - (undo)
M-RETURN  complete
TAB       indent-line-ilisp             c-U (rigid)
C-M-q     indent-sexp-ilisp
M-q       reindent-lisp
C-Z ;     comment-region-lisp           c-U n (n copies) c-U - (uncomment)
C-Z )     find-unbalenced-lisp          c-U (in region)
]         close-all-lisp                c-U (?)
