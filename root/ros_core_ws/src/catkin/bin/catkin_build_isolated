#!/usr/bin/env python

from __future__ import print_function
import argparse
import os
import sys

try:
    from catkin.builder import build_workspace_in_isolation
except ImportError:
    # find the import relatively to make it work before installing catkin
    sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'python'))
    from catkin.builder import build_workspace_in_isolation


def main():
    parser = argparse.ArgumentParser(description='Builds all catkin packages in isolation in topological order.')
    parser.add_argument('sourcespace', help='The path to an existing folder')
    parser.add_argument('--install', action='store_true', help='Flag if each workspace should be installed')
    parser.add_argument('--merge', action='store_true', help='Flag if the devel (and install) spaces should be merged in a single directory')
    parser.add_argument('--force-cmake', action='store_true', help='Flag if CMake should be invoke explicitly')
    args = parser.parse_args()

    # verify that sourcespace folder exists
    sourcespace = os.path.abspath(args.sourcespace)
    if not os.path.isdir(sourcespace):
        sys.exit('Sourcespace "%s" does not exist' % sourcespace)

    build_workspace_in_isolation(sourcespace, args.install, args.merge, args.force_cmake)


if __name__ == '__main__':
    main()
