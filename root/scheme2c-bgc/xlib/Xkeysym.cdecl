; Copyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts,
; and the Massachusetts Institute of Technology, Cambridge, Massachusetts.
;
;                         All Rights Reserved
;
; Permission to use, copy, modify, and distribute this software and its 
; documentation for any purpose and without fee is hereby granted, 
; provided that the above copyright notice appear in all copies and that
; both that copyright notice and this permission notice appear in 
; supporting documentation, and that the names of Digital or MIT not be
; used in advertising or publicity pertaining to distribution of the
; software without specific, written prior permission.  
;
; DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
; ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
; DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
; ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
; WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
; ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
; SOFTWARE.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;								       ;;;
;;;	N.B.  Contains  XK_MISCELLANY,XK_LATIN1, and DXK_PRIVATE       ;;;
;;;								       ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;*
;* TTY Functions, cleverly chosen to map to ascii, for convenience of
;* programming, but could have been arbitrary (at the cost of lookup
;* tables in client code.
;*

(const  XK_BackSpace		#xFF08)	;; back space, back char 
(const  XK_Tab			#xFF09)
(const  XK_Linefeed		#xFF0A)	;; Linefeed, LF 
(const  XK_Clear		#xFF0B)
(const  XK_Return		#xFF0D)	;; Return, enter 
(const  XK_Pause		#xFF13)	;; Pause, hold, scroll lock 
(const  XK_Escape		#xFF1B)
(const  XK_Delete		#xFFFF)	;; Delete, rubout 



;; International & multi-key character composition 

(const  XK_Multi_key		#xFF20) ;; Multi-key character compose 
(const  XK_Kanji		#xFF21) ;; Kanji, Kanji convert 

;; Cursor control & motion 

(const  XK_Home			#xFF50)
(const  XK_Left			#xFF51)	;; Move left, left arrow 
(const  XK_Up			#xFF52)	;; Move up, up arrow 
(const  XK_Right		#xFF53)	;; Move right, right arrow 
(const  XK_Down			#xFF54)	;; Move down, down arrow 
(const  XK_Prior		#xFF55)	;; Prior, previous 
(const  XK_Next			#xFF56)	;; Next 
(const  XK_End			#xFF57)	;; EOL 
(const  XK_Begin		#xFF58)	;; BOL 


;; Misc Functions 

(const  XK_Select		#xFF60)	;; Select, mark 
(const  XK_Print		#xFF61)
(const  XK_Execute		#xFF62)	;; Execute, run, do 
(const  XK_Insert		#xFF63)	;; Insert, insert here 
(const  XK_Undo			#xFF65)	;; Undo, oops 
(const  XK_Redo			#xFF66)	;; redo, again 
(const  XK_Menu			#xFF67)
(const  XK_Find			#xFF68)	;; Find, search 
(const  XK_Cancel		#xFF69)	;; Cancel, stop, abort, exit 
(const  XK_Help			#xFF6A)	;; Help, ? 
(const  XK_Break		#xFF6B)
(const  XK_Mode_switch		#xFF7E)	;; Character set switch 
(const  XK_script_switch        #xFF7E) ;; Alias for mode_switch 
(const  XK_Num_Lock		#xFF7F)

;; Keypad Functions, keypad numbers cleverly chosen to map to ascii 

(const  XK_KP_Space		#xFF80)	;; space 
(const  XK_KP_Tab		#xFF89)
(const  XK_KP_Enter		#xFF8D)	;; enter 
(const  XK_KP_F1		#xFF91)	;; PF1, KP_A, ... 
(const  XK_KP_F2		#xFF92)
(const  XK_KP_F3		#xFF93)
(const  XK_KP_F4		#xFF94)
(const  XK_KP_Equal		#xFFBD)	;; equals 
(const  XK_KP_Multiply		#xFFAA)
(const  XK_KP_Add		#xFFAB)
(const  XK_KP_Separator		#xFFAC)	;; separator, often comma 
(const  XK_KP_Subtract		#xFFAD)
(const  XK_KP_Decimal		#xFFAE)
(const  XK_KP_Divide		#xFFAF)

(const  XK_KP_0			#xFFB0)
(const  XK_KP_1			#xFFB1)
(const  XK_KP_2			#xFFB2)
(const  XK_KP_3			#xFFB3)
(const  XK_KP_4			#xFFB4)
(const  XK_KP_5			#xFFB5)
(const  XK_KP_6			#xFFB6)
(const  XK_KP_7			#xFFB7)
(const  XK_KP_8			#xFFB8)
(const  XK_KP_9			#xFFB9)



;*
;* Auxilliary Functions; note the duplicate definitions for left and right
;* function keys;  Sun keyboards and a few other manufactures have such
;* function key groups on the left and/or right sides of the keyboard.
;* We've not found a keyboard with more than 35 function keys total.
;*

(const  XK_F1			#xFFBE)
(const  XK_F2			#xFFBF)
(const  XK_F3			#xFFC0)
(const  XK_F4			#xFFC1)
(const  XK_F5			#xFFC2)
(const  XK_F6			#xFFC3)
(const  XK_F7			#xFFC4)
(const  XK_F8			#xFFC5)
(const  XK_F9			#xFFC6)
(const  XK_F10			#xFFC7)
(const  XK_F11			#xFFC8)
(const  XK_L1			#xFFC8)
(const  XK_F12			#xFFC9)
(const  XK_L2			#xFFC9)
(const  XK_F13			#xFFCA)
(const  XK_L3			#xFFCA)
(const  XK_F14			#xFFCB)
(const  XK_L4			#xFFCB)
(const  XK_F15			#xFFCC)
(const  XK_L5			#xFFCC)
(const  XK_F16			#xFFCD)
(const  XK_L6			#xFFCD)
(const  XK_F17			#xFFCE)
(const  XK_L7			#xFFCE)
(const  XK_F18			#xFFCF)
(const  XK_L8			#xFFCF)
(const  XK_F19			#xFFD0)
(const  XK_L9			#xFFD0)
(const  XK_F20			#xFFD1)
(const  XK_L10			#xFFD1)
(const  XK_F21			#xFFD2)
(const  XK_R1			#xFFD2)
(const  XK_F22			#xFFD3)
(const  XK_R2			#xFFD3)
(const  XK_F23			#xFFD4)
(const  XK_R3			#xFFD4)
(const  XK_F24			#xFFD5)
(const  XK_R4			#xFFD5)
(const  XK_F25			#xFFD6)
(const  XK_R5			#xFFD6)
(const  XK_F26			#xFFD7)
(const  XK_R6			#xFFD7)
(const  XK_F27			#xFFD8)
(const  XK_R7			#xFFD8)
(const  XK_F28			#xFFD9)
(const  XK_R8			#xFFD9)
(const  XK_F29			#xFFDA)
(const  XK_R9			#xFFDA)
(const  XK_F30			#xFFDB)
(const  XK_R10			#xFFDB)
(const  XK_F31			#xFFDC)
(const  XK_R11			#xFFDC)
(const  XK_F32			#xFFDD)
(const  XK_R12			#xFFDD)
(const  XK_R13			#xFFDE)
(const  XK_F33			#xFFDE)
(const  XK_F34			#xFFDF)
(const  XK_R14			#xFFDF)
(const  XK_F35			#xFFE0)
(const  XK_R15			#xFFE0)

;; Modifiers 

(const  XK_Shift_L		#xFFE1)	;; Left shift 
(const  XK_Shift_R		#xFFE2)	;; Right shift 
(const  XK_Control_L		#xFFE3)	;; Left control 
(const  XK_Control_R		#xFFE4)	;; Right control 
(const  XK_Caps_Lock		#xFFE5)	;; Caps lock 
(const  XK_Shift_Lock		#xFFE6)	;; Shift lock 

(const  XK_Meta_L		#xFFE7)	;; Left meta 
(const  XK_Meta_R		#xFFE8)	;; Right meta 
(const  XK_Alt_L		#xFFE9)	;; Left alt 
(const  XK_Alt_R		#xFFEA)	;; Right alt 
(const  XK_Super_L		#xFFEB)	;; Left super 
(const  XK_Super_R		#xFFEC)	;; Right super 
(const  XK_Hyper_L		#xFFED)	;; Left hyper 
(const  XK_Hyper_R		#xFFEE)	;; Right hyper 

;*
;*  Latin 1
;*  Byte 3 = 0
;*

(const  XK_space               #x020)
(const  XK_exclam              #x021)
(const  XK_quotedbl            #x022)
(const  XK_numbersign          #x023)
(const  XK_dollar              #x024)
(const  XK_percent             #x025)
(const  XK_ampersand           #x026)
(const  XK_quoteright          #x027)
(const  XK_parenleft           #x028)
(const  XK_parenright          #x029)
(const  XK_asterisk            #x02a)
(const  XK_plus                #x02b)
(const  XK_comma               #x02c)
(const  XK_minus               #x02d)
(const  XK_period              #x02e)
(const  XK_slash               #x02f)
(const  XK_0                   #x030)
(const  XK_1                   #x031)
(const  XK_2                   #x032)
(const  XK_3                   #x033)
(const  XK_4                   #x034)
(const  XK_5                   #x035)
(const  XK_6                   #x036)
(const  XK_7                   #x037)
(const  XK_8                   #x038)
(const  XK_9                   #x039)
(const  XK_colon               #x03a)
(const  XK_semicolon           #x03b)
(const  XK_less                #x03c)
(const  XK_equal               #x03d)
(const  XK_greater             #x03e)
(const  XK_question            #x03f)
(const  XK_at                  #x040)
(const  XK_A                   #x041)
(const  XK_B                   #x042)
(const  XK_C                   #x043)
(const  XK_D                   #x044)
(const  XK_E                   #x045)
(const  XK_F                   #x046)
(const  XK_G                   #x047)
(const  XK_H                   #x048)
(const  XK_I                   #x049)
(const  XK_J                   #x04a)
(const  XK_K                   #x04b)
(const  XK_L                   #x04c)
(const  XK_M                   #x04d)
(const  XK_N                   #x04e)
(const  XK_O                   #x04f)
(const  XK_P                   #x050)
(const  XK_Q                   #x051)
(const  XK_R                   #x052)
(const  XK_S                   #x053)
(const  XK_T                   #x054)
(const  XK_U                   #x055)
(const  XK_V                   #x056)
(const  XK_W                   #x057)
(const  XK_X                   #x058)
(const  XK_Y                   #x059)
(const  XK_Z                   #x05a)
(const  XK_bracketleft         #x05b)
(const  XK_backslash           #x05c)
(const  XK_bracketright        #x05d)
(const  XK_asciicircum         #x05e)
(const  XK_underscore          #x05f)
(const  XK_quoteleft           #x060)
(const  XK_lca                 #x061)
(const  XK_lcb                 #x062)
(const  XK_lcc                 #x063)
(const  XK_lcd                 #x064)
(const  XK_lce                 #x065)
(const  XK_lcf                 #x066)
(const  XK_lcg                 #x067)
(const  XK_lch                 #x068)
(const  XK_lci                 #x069)
(const  XK_lcj                 #x06a)
(const  XK_lck                 #x06b)
(const  XK_lcl                 #x06c)
(const  XK_lcm                 #x06d)
(const  XK_lcn                 #x06e)
(const  XK_lco                 #x06f)
(const  XK_lcp                 #x070)
(const  XK_lcq                 #x071)
(const  XK_lcr                 #x072)
(const  XK_lcs                 #x073)
(const  XK_lct                 #x074)
(const  XK_lcu                 #x075)
(const  XK_lcv                 #x076)
(const  XK_lcw                 #x077)
(const  XK_lcx                 #x078)
(const  XK_lcy                 #x079)
(const  XK_lcz                 #x07a)
(const  XK_braceleft           #x07b)
(const  XK_bar                 #x07c)
(const  XK_braceright          #x07d)
(const  XK_asciitilde          #x07e)

(const  XK_nobreakspace        #x0a0)
(const  XK_exclamdown          #x0a1)
(const  XK_cent        	       #x0a2)
(const  XK_sterling            #x0a3)
(const  XK_currency            #x0a4)
(const  XK_yen                 #x0a5)
(const  XK_brokenbar           #x0a6)
(const  XK_section             #x0a7)
(const  XK_diaeresis           #x0a8)
(const  XK_copyright           #x0a9)
(const  XK_ordfeminine         #x0aa)
(const  XK_guillemotleft       #x0ab)	;; left angle quotation mark 
(const  XK_notsign             #x0ac)
(const  XK_hyphen              #x0ad)
(const  XK_registered          #x0ae)
(const  XK_macron              #x0af)
(const  XK_degree              #x0b0)
(const  XK_plusminus           #x0b1)
(const  XK_twosuperior         #x0b2)
(const  XK_threesuperior       #x0b3)
(const  XK_acute               #x0b4)
(const  XK_mu                  #x0b5)
(const  XK_paragraph           #x0b6)
(const  XK_periodcentered      #x0b7)
(const  XK_cedilla             #x0b8)
(const  XK_onesuperior         #x0b9)
(const  XK_masculine           #x0ba)
(const  XK_guillemotright      #x0bb)	;; right angle quotation mark 
(const  XK_onequarter          #x0bc)
(const  XK_onehalf             #x0bd)
(const  XK_threequarters       #x0be)
(const  XK_questiondown        #x0bf)
(const  XK_Agrave              #x0c0)
(const  XK_Aacute              #x0c1)
(const  XK_Acircumflex         #x0c2)
(const  XK_Atilde              #x0c3)
(const  XK_Adiaeresis          #x0c4)
(const  XK_Aring               #x0c5)
(const  XK_AE                  #x0c6)
(const  XK_Ccedilla            #x0c7)
(const  XK_Egrave              #x0c8)
(const  XK_Eacute              #x0c9)
(const  XK_Ecircumflex         #x0ca)
(const  XK_Ediaeresis          #x0cb)
(const  XK_Igrave              #x0cc)
(const  XK_Iacute              #x0cd)
(const  XK_Icircumflex         #x0ce)
(const  XK_Idiaeresis          #x0cf)
(const  XK_Eth                 #x0d0)
(const  XK_Ntilde              #x0d1)
(const  XK_Ograve              #x0d2)
(const  XK_Oacute              #x0d3)
(const  XK_Ocircumflex         #x0d4)
(const  XK_Otilde              #x0d5)
(const  XK_Odiaeresis          #x0d6)
(const  XK_multiply            #x0d7)
(const  XK_Ooblique            #x0d8)
(const  XK_Ugrave              #x0d9)
(const  XK_Uacute              #x0da)
(const  XK_Ucircumflex         #x0db)
(const  XK_Udiaeresis          #x0dc)
(const  XK_Yacute              #x0dd)
(const  XK_Thorn               #x0de)
(const  XK_ssharp              #x0df)
(const  XK_lcagrave             #x0e0)
(const  XK_lcaacute             #x0e1)
(const  XK_lcacircumflex        #x0e2)
(const  XK_lcatilde             #x0e3)
(const  XK_lcadiaeresis         #x0e4)
(const  XK_lcaring              #x0e5)
(const  XK_lcae                 #x0e6)
(const  XK_lcccedilla           #x0e7)
(const  XK_lcegrave             #x0e8)
(const  XK_lceacute             #x0e9)
(const  XK_lcecircumflex        #x0ea)
(const  XK_lcediaeresis         #x0eb)
(const  XK_lcigrave             #x0ec)
(const  XK_lciacute             #x0ed)
(const  XK_lcicircumflex        #x0ee)
(const  XK_lcidiaeresis         #x0ef)
(const  XK_lceth                #x0f0)
(const  XK_lcntilde             #x0f1)
(const  XK_lcograve             #x0f2)
(const  XK_lcoacute             #x0f3)
(const  XK_lcocircumflex        #x0f4)
(const  XK_lcotilde             #x0f5)
(const  XK_lcodiaeresis         #x0f6)
(const  XK_division            #x0f7)
(const  XK_oslash              #x0f8)
(const  XK_lcugrave             #x0f9)
(const  XK_lcuacute             #x0fa)
(const  XK_lcucircumflex        #x0fb)
(const  XK_lcudiaeresis         #x0fc)
(const  XK_lcyacute             #x0fd)
(const  XK_lcthorn              #x0fe)
(const  XK_ydiaeresis          #x0ff)

;*
;* DEC private keysyms
;* (29th bit set)
;*

;* two-key compose sequence initiators, chosen to map to Latin1 characters 

(const  DXK_ring_accent		#x1000FEB0)
(const  DXK_circumflex_accent	#x1000FE5E)
(const  DXK_cedilla_accent	#x1000FE2C)
(const  DXK_acute_accent	#x1000FE27)
(const  DXK_grave_accent	#x1000FE60)
(const  DXK_tilde		#x1000FE7E)
(const  DXK_diaeresis		#x1000FE22)

;* special keysym for LK2** "Remove" key on editing keypad 

(const  DXK_Remove		#x1000FF00)
