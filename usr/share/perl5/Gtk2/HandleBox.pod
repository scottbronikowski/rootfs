=head1 NAME

Gtk2::HandleBox - wrapper for GtkHandleBox

=cut

=head1 HIERARCHY

  Glib::Object
  +----Glib::InitiallyUnowned
       +----Gtk2::Object
            +----Gtk2::Widget
                 +----Gtk2::Container
                      +----Gtk2::Bin
                           +----Gtk2::HandleBox



=cut

=head1 INTERFACES

  Glib::Object::_Unregistered::AtkImplementorIface
  Gtk2::Buildable



=cut


=head1 METHODS

=head2 widget = Gtk2::HandleBox-E<gt>B<new> 

=head2 boolean = $handle_box-E<gt>B<get_child_detached> 

=head2 positiontype = $handle_box-E<gt>B<get_handle_position> 

=head2 $handle_box-E<gt>B<set_handle_position> ($position)

=over

=item * $position (Gtk2::PositionType) 

=back

=head2 shadowtype = $handle_box-E<gt>B<get_shadow_type> 

=head2 $handle_box-E<gt>B<set_shadow_type> ($type)

=over

=item * $type (Gtk2::ShadowType) 

=back

=head2 positiontype = $handle_box-E<gt>B<get_snap_edge> 

=head2 $handle_box-E<gt>B<set_snap_edge> ($edge)

=over

=item * $edge (Gtk2::PositionType) 

=back



=cut


=head1 PROPERTIES

=over

=item 'child-detached' (boolean : default false : readable / private)

A boolean value indicating whether the handlebox's child is attached or detached.

=item 'handle-position' (Gtk2::PositionType : default "left" : readable / writable / private)

Position of the handle relative to the child widget

=item 'shadow' (Gtk2::ShadowType : default "out" : readable / writable / private)

Deprecated property, use shadow_type instead

=item 'shadow-type' (Gtk2::ShadowType : default "out" : readable / writable / private)

Appearance of the shadow that surrounds the container

=item 'snap-edge' (Gtk2::PositionType : default "top" : readable / writable / private)

Side of the handlebox that's lined up with the docking point to dock the handlebox

=item 'snap-edge-set' (boolean : default false : readable / writable / private)

Whether to use the value from the snap_edge property or a value derived from handle_position

=back



=cut


=head1 SIGNALS

=over

=item B<child-detached> (Gtk2::HandleBox, Gtk2::Widget)

=item B<child-attached> (Gtk2::HandleBox, Gtk2::Widget)

=back



=cut


=head1 ENUMS AND FLAGS

=head2 enum Gtk2::PositionType



=over

=item * 'left' / 'GTK_POS_LEFT'

=item * 'right' / 'GTK_POS_RIGHT'

=item * 'top' / 'GTK_POS_TOP'

=item * 'bottom' / 'GTK_POS_BOTTOM'

=back


=head2 enum Gtk2::ShadowType



=over

=item * 'none' / 'GTK_SHADOW_NONE'

=item * 'in' / 'GTK_SHADOW_IN'

=item * 'out' / 'GTK_SHADOW_OUT'

=item * 'etched-in' / 'GTK_SHADOW_ETCHED_IN'

=item * 'etched-out' / 'GTK_SHADOW_ETCHED_OUT'

=back




=cut


=head1 SEE ALSO

L<Gtk2>, L<Glib::Object>, L<Glib::InitiallyUnowned>, L<Gtk2::Object>, L<Gtk2::Widget>, L<Gtk2::Container>, L<Gtk2::Bin>


=cut


=head1 COPYRIGHT

Copyright (C) 2003-2008 by the gtk2-perl team.

This software is licensed under the LGPL.  See L<Gtk2> for a full notice.



=cut

