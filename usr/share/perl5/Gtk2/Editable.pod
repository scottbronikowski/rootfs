=head1 NAME

Gtk2::Editable - wrapper for GtkEditable

=cut

=head1 HIERARCHY

  Glib::Interface
  +----Gtk2::Editable



=cut


=head1 METHODS

=head2 string = $editable-E<gt>B<get_chars> ($start_pos, $end_pos)

=over

=item * $start_pos (integer) 

=item * $end_pos (integer) 

=back

=head2 $editable-E<gt>B<copy_clipboard> 

=head2 $editable-E<gt>B<cut_clipboard> 

=head2 $editable-E<gt>B<delete_selection> 

=head2 $editable-E<gt>B<delete_text> ($start_pos, $end_pos)

=over

=item * $start_pos (integer) 

=item * $end_pos (integer) 

=back

=head2 boolean = $editable-E<gt>B<get_editable> 

=head2 $editable-E<gt>B<set_editable> ($is_editable)

=over

=item * $is_editable (boolean) 

=back

=head2 new_position = $editable->B<insert_text> (new_text, position)

=over

=item * $new_text (string) 

=item * ... (list) 

=back



=head2 $editable-E<gt>B<paste_clipboard> 

=head2 integer = $editable-E<gt>B<get_position> 

=head2 $editable-E<gt>B<set_position> ($position)

=over

=item * $position (integer) 

=back

=head2 $editable-E<gt>B<select_region> ($start, $end)

=over

=item * $start (integer) 

=item * $end (integer) 

=back

=head2 (start, end) = $editable->B<get_selection_bounds>

Returns integers, start and end.



=cut


=head1 SIGNALS

=over

=item B<changed> (Gtk2::Editable)

=item B<insert-text> (Gtk2::Editable, string, integer, gpointer)

=item B<delete-text> (Gtk2::Editable, integer, integer)

=back



=cut


=head1 SEE ALSO

L<Gtk2>, L<Glib::Interface>


=cut


=head1 COPYRIGHT

Copyright (C) 2003-2008 by the gtk2-perl team.

This software is licensed under the LGPL.  See L<Gtk2> for a full notice.



=cut

