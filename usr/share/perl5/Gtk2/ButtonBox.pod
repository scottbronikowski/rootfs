=head1 NAME

Gtk2::ButtonBox - wrapper for GtkButtonBox

=cut

=head1 HIERARCHY

  Glib::Object
  +----Glib::InitiallyUnowned
       +----Gtk2::Object
            +----Gtk2::Widget
                 +----Gtk2::Container
                      +----Gtk2::Box
                           +----Gtk2::ButtonBox



=cut

=head1 INTERFACES

  Glib::Object::_Unregistered::AtkImplementorIface
  Gtk2::Buildable
  Gtk2::Orientable



=cut


=head1 METHODS

=head2 boolean = $widget-E<gt>B<get_child_secondary> ($child)

=over

=item * $child (Gtk2::Widget) 

=back

Since: gtk+ 2.4

=head2 $widget-E<gt>B<set_child_secondary> ($child, $is_secondary)

=over

=item * $child (Gtk2::Widget) 

=item * $is_secondary (boolean) 

=back

=head2 buttonboxstyle = $widget-E<gt>B<get_layout> 

=head2 $widget-E<gt>B<set_layout> ($layout_style)

=over

=item * $layout_style (Gtk2::ButtonBoxStyle) 

=back



=cut


=head1 PROPERTIES

=over

=item 'layout-style' (Gtk2::ButtonBoxStyle : default "default-style" : readable / writable / private)

How to lay out the buttons in the box. Possible values are: default, spread, edge, start and end

=back



=cut


=head1 ENUMS AND FLAGS

=head2 enum Gtk2::ButtonBoxStyle



=over

=item * 'default-style' / 'GTK_BUTTONBOX_DEFAULT_STYLE'

=item * 'spread' / 'GTK_BUTTONBOX_SPREAD'

=item * 'edge' / 'GTK_BUTTONBOX_EDGE'

=item * 'start' / 'GTK_BUTTONBOX_START'

=item * 'end' / 'GTK_BUTTONBOX_END'

=item * 'center' / 'GTK_BUTTONBOX_CENTER'

=back




=cut


=head1 SEE ALSO

L<Gtk2>, L<Glib::Object>, L<Glib::InitiallyUnowned>, L<Gtk2::Object>, L<Gtk2::Widget>, L<Gtk2::Container>, L<Gtk2::Box>


=cut


=head1 COPYRIGHT

Copyright (C) 2003-2008 by the gtk2-perl team.

This software is licensed under the LGPL.  See L<Gtk2> for a full notice.



=cut

