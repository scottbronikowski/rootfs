=head1 NAME

Gtk2::Expander - wrapper for GtkExpander

=cut

=head1 HIERARCHY

  Glib::Object
  +----Glib::InitiallyUnowned
       +----Gtk2::Object
            +----Gtk2::Widget
                 +----Gtk2::Container
                      +----Gtk2::Bin
                           +----Gtk2::Expander



=cut

=head1 INTERFACES

  Glib::Object::_Unregistered::AtkImplementorIface
  Gtk2::Buildable



=cut


=head1 METHODS

=head2 widget = Gtk2::Expander-E<gt>B<new> ($label=undef)

=over

=item * $label (string or undef) 

=back

=head2 widget = Gtk2::Expander-E<gt>B<new_with_mnemonic> ($label)

=over

=item * $label (string) 

=back

=head2 boolean = $expander-E<gt>B<get_expanded> 

=head2 $expander-E<gt>B<set_expanded> ($expanded)

=over

=item * $expanded (boolean) 

=back

=head2 string = $expander-E<gt>B<get_label> 

=head2 $expander-E<gt>B<set_label> ($label)

=over

=item * $label (string) 

=back

=head2 widget = $expander-E<gt>B<get_label_widget> 

=head2 $expander-E<gt>B<set_label_widget> ($label_widget)

=over

=item * $label_widget (Gtk2::Widget) 

=back

=head2 integer = $expander-E<gt>B<get_spacing> 

=head2 $expander-E<gt>B<set_spacing> ($spacing)

=over

=item * $spacing (integer) 

=back

=head2 boolean = $expander-E<gt>B<get_use_markup> 

=head2 $expander-E<gt>B<set_use_markup> ($use_markup)

=over

=item * $use_markup (boolean) 

=back

=head2 boolean = $expander-E<gt>B<get_use_underline> 

=head2 $expander-E<gt>B<set_use_underline> ($use_underline)

=over

=item * $use_underline (boolean) 

=back



=cut


=head1 PROPERTIES

=over

=item 'expanded' (boolean : default false : readable / writable / construct / private)

Whether the expander has been opened to reveal the child widget

=item 'label' (string : default undef : readable / writable / construct / private)

Text of the expander's label

=item 'label-fill' (boolean : default false : readable / writable / construct / private)

Whether the label widget should fill all available horizontal space

=item 'label-widget' (Gtk2::Widget : default undef : readable / writable / private)

A widget to display in place of the usual expander label

=item 'spacing' (integer : default 0 : readable / writable / private)

Space to put between the label and the child

=item 'use-markup' (boolean : default false : readable / writable / construct / private)

The text of the label includes XML markup. See pango_parse_markup()

=item 'use-underline' (boolean : default false : readable / writable / construct / private)

If set, an underline in the text indicates the next character should be used for the mnemonic accelerator key

=back



=cut


=head1 SIGNALS

=over

=item B<activate> (Gtk2::Expander)

=back



=cut


=head1 SEE ALSO

L<Gtk2>, L<Glib::Object>, L<Glib::InitiallyUnowned>, L<Gtk2::Object>, L<Gtk2::Widget>, L<Gtk2::Container>, L<Gtk2::Bin>


=cut


=head1 COPYRIGHT

Copyright (C) 2003-2008 by the gtk2-perl team.

This software is licensed under the LGPL.  See L<Gtk2> for a full notice.



=cut

