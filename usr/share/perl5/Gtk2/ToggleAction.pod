=head1 NAME

Gtk2::ToggleAction - wrapper for GtkToggleAction

=cut

=for position SYNOPSIS

=head1 SYNOPSIS

  my $action = Gtk2::ToggleAction->new (name => 'one',
                                        tooltip => 'One');

Note that the constructor slightly deviates from the convenience constructor in
the C API.  Instead of passing in a list of values for name, label, tooltip and
stock-id, you just use key => value pairs like with Glib::Object::new.

=cut



=head1 HIERARCHY

  Glib::Object
  +----Gtk2::Action
       +----Gtk2::ToggleAction



=cut

=head1 INTERFACES

  Gtk2::Buildable



=cut


=head1 METHODS

=head2 boolean = $action-E<gt>B<get_active> 

=head2 $action-E<gt>B<set_active> ($is_active)

=over

=item * $is_active (boolean) 

=back

=head2 boolean = $action-E<gt>B<get_draw_as_radio> 

=head2 $action-E<gt>B<set_draw_as_radio> ($draw_as_radio)

=over

=item * $draw_as_radio (boolean) 

=back

=head2 $action-E<gt>B<toggled> 



=cut


=head1 PROPERTIES

=over

=item 'active' (boolean : default false : readable / writable / private)

If the toggle action should be active in or not

=item 'draw-as-radio' (boolean : default false : readable / writable / private)

Whether the proxies for this action look like radio action proxies

=back



=cut


=head1 SIGNALS

=over

=item B<toggled> (Gtk2::ToggleAction)

=back



=cut


=head1 SEE ALSO

L<Gtk2>, L<Glib::Object>, L<Gtk2::Action>


=cut


=head1 COPYRIGHT

Copyright (C) 2003-2008 by the gtk2-perl team.

This software is licensed under the LGPL.  See L<Gtk2> for a full notice.



=cut

