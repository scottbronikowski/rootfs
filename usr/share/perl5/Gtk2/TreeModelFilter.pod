=head1 NAME

Gtk2::TreeModelFilter - wrapper for GtkTreeModelFilter

=cut

=head1 HIERARCHY

  Glib::Object
  +----Gtk2::TreeModelFilter



=cut

=head1 INTERFACES

  Gtk2::TreeModel
  Gtk2::TreeDragSource



=cut


=head1 METHODS

=head2 treemodelfilter = Gtk2::TreeModelFilter-E<gt>B<new> ($child_model, $root=undef)

=over

=item * $child_model (Gtk2::TreeModel) 

=item * $root (Gtk2::TreePath or undef) 

=back

=head2 $filter-E<gt>B<clear_cache> 

=head2 treeiter = $filter-E<gt>B<convert_child_iter_to_iter> ($child_iter)

=over

=item * $child_iter (Gtk2::TreeIter) 

=back

=head2 treepath or undef = $filter-E<gt>B<convert_child_path_to_path> ($child_path)

=over

=item * $child_path (Gtk2::TreePath) 

=back

=head2 treeiter = $filter-E<gt>B<convert_iter_to_child_iter> ($filter_iter)

=over

=item * $filter_iter (Gtk2::TreeIter) 

=back

=head2 treepath or undef = $path-E<gt>B<convert_path_to_child_path> ($filter_path)

=over

=item * $filter_path (Gtk2::TreePath) 

=back

=head2 treemodel = $filter-E<gt>B<get_model> 

=head2 $filter-E<gt>B<set_modify_func> ($types, $func=undef, $data=undef)

=over

=item * $types (scalar) type name string for one column, or an arrayref of type names for multiple columns

=item * $func (scalar) 

=item * $data (scalar) 

=back

func is called as

    sub myfunc {
      my ($filter, $iter, $column_num, $data) = @_;
      ...

and should return the value from the filtered model that iter row and
column number.

=head2 $filter-E<gt>B<refilter> 

=head2 $filter-E<gt>B<set_visible_column> ($column)

=over

=item * $column (integer) 

=back

=head2 $filter-E<gt>B<set_visible_func> ($func, $data=undef)

=over

=item * $func (scalar) 

=item * $data (scalar) 

=back



=cut


=head1 PROPERTIES

=over

=item 'child-model' (Gtk2::TreeModel : default undef : readable / writable / construct-only / private)

The model for the filtermodel to filter

=item 'virtual-root' (Gtk2::TreePath : default undef : readable / writable / construct-only / private)

The virtual root (relative to the child model) for this filtermodel

=back



=cut


=head1 SEE ALSO

L<Gtk2>, L<Glib::Object>


=cut


=head1 COPYRIGHT

Copyright (C) 2003-2008 by the gtk2-perl team.

This software is licensed under the LGPL.  See L<Gtk2> for a full notice.



=cut

