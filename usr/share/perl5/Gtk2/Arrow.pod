=head1 NAME

Gtk2::Arrow - wrapper for GtkArrow

=cut

=head1 HIERARCHY

  Glib::Object
  +----Glib::InitiallyUnowned
       +----Gtk2::Object
            +----Gtk2::Widget
                 +----Gtk2::Misc
                      +----Gtk2::Arrow



=cut

=head1 INTERFACES

  Glib::Object::_Unregistered::AtkImplementorIface
  Gtk2::Buildable



=cut


=head1 METHODS

=head2 widget = Gtk2::Arrow-E<gt>B<new> ($arrow_type, $shadow_type)

=over

=item * $arrow_type (Gtk2::ArrowType) 

=item * $shadow_type (Gtk2::ShadowType) 

=back

=head2 $arrow-E<gt>B<set> ($arrow_type, $shadow_type)

=over

=item * $arrow_type (Gtk2::ArrowType) 

=item * $shadow_type (Gtk2::ShadowType) 

=back



=cut


=head1 PROPERTIES

=over

=item 'arrow-type' (Gtk2::ArrowType : default "right" : readable / writable / private)

The direction the arrow should point

=item 'shadow-type' (Gtk2::ShadowType : default "out" : readable / writable / private)

Appearance of the shadow surrounding the arrow

=back



=cut


=head1 ENUMS AND FLAGS

=head2 enum Gtk2::ArrowType



=over

=item * 'up' / 'GTK_ARROW_UP'

=item * 'down' / 'GTK_ARROW_DOWN'

=item * 'left' / 'GTK_ARROW_LEFT'

=item * 'right' / 'GTK_ARROW_RIGHT'

=item * 'none' / 'GTK_ARROW_NONE'

=back


=head2 enum Gtk2::ShadowType



=over

=item * 'none' / 'GTK_SHADOW_NONE'

=item * 'in' / 'GTK_SHADOW_IN'

=item * 'out' / 'GTK_SHADOW_OUT'

=item * 'etched-in' / 'GTK_SHADOW_ETCHED_IN'

=item * 'etched-out' / 'GTK_SHADOW_ETCHED_OUT'

=back




=cut


=head1 SEE ALSO

L<Gtk2>, L<Glib::Object>, L<Glib::InitiallyUnowned>, L<Gtk2::Object>, L<Gtk2::Widget>, L<Gtk2::Misc>


=cut


=head1 COPYRIGHT

Copyright (C) 2003-2008 by the gtk2-perl team.

This software is licensed under the LGPL.  See L<Gtk2> for a full notice.



=cut

