=head1 NAME

Template::XML - XML plugins for the Template Toolkit

=head1 SYNOPSIS

    [% USE XML;

       dom    = XML.dom('foo.xml');
       xpath  = XML.xpath('bar.xml');
       simple = XML.simple('baz.xml');
       rss    = XML.simple('news.rdf');
    %]
    
=head1 DESCRIPTION

The Template-XML distribution provides a number of Template Toolkit
plugin modules for working with XML.

The Template::Plugin::XML module is a front-end to the various other
XML plugin modules.  Through this you can access XML files and
directories of XML files via the Template::Plugin::XML::File and
Template::Plugin::XML::Directory modules (which subclass from the
Template::Plugin::File and Template::Plugin::Directory modules
respectively).  You can then create a Document Object Model (DOM) from
an XML file (Template::Plugin::XML::DOM), examine it using XPath
queries (Template::Plugin::XML::XPath), turn it into a Perl data
structure (Template::Plugin::XML::Simple) or parse it as an RSS (RDF
Site Summary) file.

The basic XML plugins were distributed as part of the Template Toolkit
until version 2.15 released in May 2006.  At this time they were
extracted into this separate Template-XML distribution and an alpha
version of this Template::Plugin::XML front-end module was added.

=head1 AUTHORS

Andy Wardley wrote the Template Toolkit plugin modules, with
assistance from Simon Matthews in the case of the XML::DOM plugin.
Matt Sergeant wrote the XML::XPath module.  Enno Derksen and Clark
Cooper wrote the XML::DOM module.  Jonathan Eisenzopf wrote the
XML::RSS module.  Grant McLean wrote the XML::Simple module.  Clark
Cooper and Larry Wall wrote the XML::Parser module.  James Clark wrote
the expat library.

=head1 COPYRIGHT

Copyright (C) 1996-2006 Andy Wardley.  All Rights Reserved.

This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.

=head1 SEE ALSO

L<Template|Template>, L<Template::Plugins>, L<Template::Plugin::XML>,
L<Template::Plugin::XML::DOM>, L<Template::Plugin::XML::RSS>,
L<Template::Plugin::XML::Simple>, L<Template::Plugin::XML::XPath>

=cut

# Local Variables:
# mode: perl
# perl-indent-level: 4
# indent-tabs-mode: nil
# End:
#
# vim: expandtab shiftwidth=4:
