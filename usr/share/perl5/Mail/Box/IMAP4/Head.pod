=head1 NAME

Mail::Box::IMAP4::Head - header fields related IMAP interface

=head1 INHERITANCE

 Mail::Box::IMAP4::Head
   is a Mail::Message::Head
   is a Mail::Reporter

=head1 DESCRIPTION

This class implements a pure IMAP4 protocol interface, where as little
data is retreived from the header as possible.  This may look nice
to you, but is not sufficient for many tasks.  For instance, you cannot
removed or modify fields this way.

Change L<Mail::Box::IMAP4::new(cache_head)|Mail::Box::IMAP4/"METHODS"> to C<YES> or C<DELAY>, to
get a message header which is capable of performing all possible
games with headers.  On the other hand: the other settings are not
100% safe...

=head1 OVERLOADED

=over 4

=item overload: B<"">

See L<Mail::Message::Head/"OVERLOADED">

=item overload: B<bool>

See L<Mail::Message::Head/"OVERLOADED">

=back

=head1 METHODS

=head2 Constructors

=over 4

=item Mail::Box::IMAP4::Head-E<gt>B<build>([PAIR|FIELD]-LIST)

See L<Mail::Message::Head/"Constructors">

=item Mail::Box::IMAP4::Head-E<gt>B<new>(OPTIONS)

 -Option      --Defined in     --Default
  cache_fields                   false
  field_type    Mail::Message::Head  Mail::Message::Field::Fast
  log           Mail::Reporter   'WARNINGS'
  message       Mail::Message::Head  undef
  modified      Mail::Message::Head  <false>
  trace         Mail::Reporter   'WARNINGS'

=over 2

=item cache_fields => BOOLEAN

This is only a read-cache on fields, because this kind of header does
not allow writing of fields.  See L<Mail::Box::IMAP4::new(cache_head)|Mail::Box::IMAP4/"METHODS">,
this value is set to C<false> for C<NO> and C<true> for C<PARTIAL>..

=item field_type => CLASS

=item log => LEVEL

=item message => MESSAGE

=item modified => BOOLEAN

=item trace => LEVEL

=back

=back

=head2 The header

=over 4

=item $obj-E<gt>B<isDelayed>

See L<Mail::Message::Head/"The header">

=item $obj-E<gt>B<isEmpty>

See L<Mail::Message::Head/"The header">

=item $obj-E<gt>B<isModified>

See L<Mail::Message::Head/"The header">

=item $obj-E<gt>B<knownNames>

See L<Mail::Message::Head/"The header">

=item $obj-E<gt>B<message>([MESSAGE])

See L<Mail::Message::Head/"The header">

=item $obj-E<gt>B<modified>([BOOLEAN])

See L<Mail::Message::Head/"The header">

=item $obj-E<gt>B<orderedFields>

See L<Mail::Message::Head/"The header">

=back

=head2 Access to the header

=over 4

=item $obj-E<gt>B<get>(NAME [,INDEX])

Get the information about the header line NAME.  Realization will
take place.

=item $obj-E<gt>B<study>(NAME [,INDEX])

See L<Mail::Message::Head/"Access to the header">

=back

=head2 About the body

=over 4

=item $obj-E<gt>B<guessBodySize>

See L<Mail::Message::Head/"About the body">

=item $obj-E<gt>B<isMultipart>

See L<Mail::Message::Head/"About the body">

=back

=head2 Internals

=over 4

=item $obj-E<gt>B<addNoRealize>(FIELD)

See L<Mail::Message::Head/"Internals">

=item $obj-E<gt>B<addOrderedFields>(FIELDS)

See L<Mail::Message::Head/"Internals">

=item $obj-E<gt>B<fileLocation>

See L<Mail::Message::Head/"Internals">

=item $obj-E<gt>B<load>

See L<Mail::Message::Head/"Internals">

=item $obj-E<gt>B<moveLocation>(DISTANCE)

See L<Mail::Message::Head/"Internals">

=item $obj-E<gt>B<read>(PARSER)

See L<Mail::Message::Head/"Internals">

=item $obj-E<gt>B<setNoRealize>(FIELD)

See L<Mail::Message::Head/"Internals">

=back

=head2 Error handling

=over 4

=item $obj-E<gt>B<AUTOLOAD>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<addReport>(OBJECT)

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

=item Mail::Box::IMAP4::Head-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<errors>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<log>([LEVEL [,STRINGS]])

=item Mail::Box::IMAP4::Head-E<gt>B<log>([LEVEL [,STRINGS]])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logPriority>(LEVEL)

=item Mail::Box::IMAP4::Head-E<gt>B<logPriority>(LEVEL)

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logSettings>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<notImplemented>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<report>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<reportAll>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<trace>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<warnings>

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

=over 4

=item $obj-E<gt>B<DESTROY>

See L<Mail::Reporter/"Cleanup">

=item $obj-E<gt>B<inGlobalDestruction>

See L<Mail::Reporter/"Cleanup">

=back

=head1 DIAGNOSTICS

=over 4

=item Error: Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.099,
built on July 07, 2011. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2011 by Mark Overmeer. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

