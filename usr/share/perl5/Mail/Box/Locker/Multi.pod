=head1 NAME

Mail::Box::Locker::Multi - lock a folder in all ways which work

=head1 INHERITANCE

 Mail::Box::Locker::Multi
   is a Mail::Box::Locker
   is a Mail::Reporter

=head1 SYNOPSIS

 See Mail::Box::Locker

=head1 DESCRIPTION

The C<::Multi> locker locks a folder in each way it can.  This way, the
chance is highest that any other program will leave the folder alone
during our access to it.

NFS-lock and Flock are tried.  More may be added when the ways to
lock are extended.  DotLock overlaps with NFS-lock, but NFS-lock is
safer, so that version is preferred.

=head1 METHODS

=head2 Constructors

=over 4

=item Mail::Box::Locker::Multi-E<gt>B<new>(OPTIONS)

You may also pass all OPTIONS understood by the initiated lockers
used by the multi locker.

 -Option --Defined in     --Default
  expires  Mail::Box::Locker  1 hour
  file     Mail::Box::Locker  undef
  folder   Mail::Box::Locker  <undef>
  log      Mail::Reporter   'WARNINGS'
  method   Mail::Box::Locker  'MULTI'
  timeout  Mail::Box::Locker  10 seconds
  trace    Mail::Reporter   'WARNINGS'
  use                       <all possible>

=over 2

=item expires => SECONDS

=item file => FILENAME

=item folder => FOLDER

=item log => LEVEL

=item method => STRING|CLASS|ARRAY

=item timeout => SECONDS|'NOTIMEOUT'

=item trace => LEVEL

=item use => ARRAY-of-(NAMES|LOCKER)

Array of locker type NAMES or LOCKER objects to be used to lock one
folder.  The type NAMES are converted into objects.  When you create your
own LOCKER objects, be sure to set the timeout very short (preferrably
to 1).

Some locking types are not available on some platforms, so they will
not be excluded from the default list (NFS POSIX Flock).

=back

example: using a subset of multi-lockers

 my $locker = Mail::Box::Locker::Multi->new(use => ['DOTLOCK','FLOCK']);

=back

=head2 The Locker

=over 4

=item $obj-E<gt>B<filename>([FILENAME])

See L<Mail::Box::Locker/"The Locker">

=item $obj-E<gt>B<folder>([FOLDER])

See L<Mail::Box::Locker/"The Locker">

=item $obj-E<gt>B<lockers>

Returns a list with all locker objects used by this object.

=item $obj-E<gt>B<name>

See L<Mail::Box::Locker/"The Locker">

=back

=head2 Locking

=over 4

=item $obj-E<gt>B<hasLock>

See L<Mail::Box::Locker/"Locking">

=item $obj-E<gt>B<isLocked>

See L<Mail::Box::Locker/"Locking">

=item $obj-E<gt>B<lock>(FOLDER)

See L<Mail::Box::Locker/"Locking">

=item $obj-E<gt>B<unlock>

See L<Mail::Box::Locker/"Locking">

=back

=head2 Error handling

=over 4

=item $obj-E<gt>B<AUTOLOAD>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<addReport>(OBJECT)

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

=item Mail::Box::Locker::Multi-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<errors>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<log>([LEVEL [,STRINGS]])

=item Mail::Box::Locker::Multi-E<gt>B<log>([LEVEL [,STRINGS]])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logPriority>(LEVEL)

=item Mail::Box::Locker::Multi-E<gt>B<logPriority>(LEVEL)

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logSettings>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<notImplemented>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<report>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<reportAll>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<trace>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<warnings>

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

=over 4

=item $obj-E<gt>B<DESTROY>

See L<Mail::Box::Locker/"Cleanup">

=item $obj-E<gt>B<inGlobalDestruction>

See L<Mail::Reporter/"Cleanup">

=back

=head1 DIAGNOSTICS

=over 4

=item Error: Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.099,
built on July 07, 2011. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2011 by Mark Overmeer. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

