=head1 NAME

Mail::Box::Search::SpamAssassin - select spam messages with Mail::SpamAssassin

=head1 INHERITANCE

 Mail::Box::Search::SpamAssassin
   is a Mail::Box::Search
   is a Mail::Reporter

=head1 SYNOPSIS

 use Mail::Box::Manager;
 my $mgr    = Mail::Box::Manager->new;
 my $folder = $mgr->open('Inbox');

 my $spam = Mail::Box::Search::SpamAssassin->new;
 if($spam->search($message)) {...}

 my @msgs   = $filter->search($folder);
 foreach my $msg ($folder->messages)
 {   $msg->delete if $msg->label('spam');
 }

 my $spam2 = Mail::Box::Search::SpamAssassin
               ->new(deliver => 'DELETE');
 $spam2->search($folder);
 $mgr->moveMessages($spamfolder, $folder->messages('spam'));

=head1 DESCRIPTION

I<Spam> means "unsollicited e-mail", and is as name derived from a
Monty Python scatch.  Although Monty Python is fun, spam is a pain:
it needlessly spoils minutes of time from most people: telephone
bills, overful mailboxes which block honest e-mail, and accidentally
removal of honest e-mail which looks like spam.  Spam is the pest
of Internet.

Happily, Mail::Box can be used as spam filter, in combination with
the useful Mail::SpamAssassin module (which must be installed separately).
Each message which is searched is wrapped in a
L<Mail::Message::Wrapper::SpamAssassin|Mail::Message::Wrapper::SpamAssassin> object.

The spam-assassin module version 2 is not really well adapted for
L<Mail::Message|Mail::Message> objects, which will make this search even slower than
spam-detection already is.

=head1 METHODS

=head2 Constructors

=over 4

=item Mail::Box::Search::SpamAssassin-E<gt>B<new>(OPTIONS)

Create a spam filter.  Internally, a Mail::SpamAssassin object is
maintained.

Only the whole message can be searched; this is a limitation of
the Mail::SpamAssassin module.

 -Option       --Defined in     --Default
  binaries       Mail::Box::Search  <false>
  decode         Mail::Box::Search  <true>
  delayed        Mail::Box::Search  <true>
  deleted        Mail::Box::Search  <false>
  deliver        Mail::Box::Search  undef
  in             Mail::Box::Search  'MESSAGE'
  label                           c<'spam'>
  limit          Mail::Box::Search  0
  log            Mail::Reporter   'WARNINGS'
  logical        Mail::Box::Search  'REPLACE'
  multiparts     Mail::Box::Search  <true>
  rewrite_mail                    <true>
  sa_options                      { }
  spam_assassin                   undef
  trace          Mail::Reporter   'WARNINGS'

=over 2

=item binaries => BOOLEAN

=item decode => BOOLEAN

=item delayed => BOOLEAN

=item deleted => BOOLEAN

=item deliver => undef|CODE|'DELETE'

=item in => 'HEAD'|'BODY'|'MESSAGE'

=item label => STRING|undef

Mark all selected message with the specified STRING.  If this
option is explicitly set to C<undef>, the label will not be set.

=item limit => NUMBER

=item log => LEVEL

=item logical => 'REPLACE'|'AND'|'OR'|'NOT'|'AND NOT'|'OR NOT'

=item multiparts => BOOLEAN

=item rewrite_mail => BOOLEAN

Add lines to the message header describing the results of the spam
scan. See Mail::SpamAssassin::PerMsgStatus subroutine rewrite_mail.

=item sa_options => HASH

Options to create the internal Mail::SpamAssassin object; see its
manual page for the available options.  Other setting may be provided
via SpamAssassins configuration file mechanism, which is explained in
L<Mail::SpamAssassin::Conf>.

=item spam_assassin => OBJECT

Provide a Mail::SpamAssassin object to be used for searching spam.  If
none is specified, one is created internally.  The object can be
retreived with assassinator().

=item trace => LEVEL

=back

example: 

 my $filter = Mail::Box::Search::SpamAssassin
               ->new( found => 'DELETE' );

=back

=head2 Searching

=over 4

=item $obj-E<gt>B<assassinator>

Returns the internally maintained assassinator object.  You may want
to reach this object for complex configuration.

=item $obj-E<gt>B<inBody>(PART, BODY)

See L<Mail::Box::Search/"Searching">

=item $obj-E<gt>B<inHead>(PART, HEAD)

See L<Mail::Box::Search/"Searching">

=item $obj-E<gt>B<search>(FOLDER|THREAD|MESSAGE|ARRAY-OF-MESSAGES)

See L<Mail::Box::Search/"Searching">

=item $obj-E<gt>B<searchPart>(PART)

See L<Mail::Box::Search/"Searching">

=back

=head2 The Results

=over 4

=item $obj-E<gt>B<printMatch>([FILEHANDLE], HASH)

See L<Mail::Box::Search/"The Results">

=back

=head2 Error handling

=over 4

=item $obj-E<gt>B<AUTOLOAD>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<addReport>(OBJECT)

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

=item Mail::Box::Search::SpamAssassin-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<errors>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<log>([LEVEL [,STRINGS]])

=item Mail::Box::Search::SpamAssassin-E<gt>B<log>([LEVEL [,STRINGS]])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logPriority>(LEVEL)

=item Mail::Box::Search::SpamAssassin-E<gt>B<logPriority>(LEVEL)

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logSettings>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<notImplemented>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<report>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<reportAll>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<trace>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<warnings>

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

=over 4

=item $obj-E<gt>B<DESTROY>

See L<Mail::Reporter/"Cleanup">

=item $obj-E<gt>B<inGlobalDestruction>

See L<Mail::Reporter/"Cleanup">

=back

=head1 DIAGNOSTICS

=over 4

=item Error: Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.099,
built on July 07, 2011. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2011 by Mark Overmeer. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

