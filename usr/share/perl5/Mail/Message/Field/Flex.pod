=head1 NAME

Mail::Message::Field::Flex - one line of a message header

=head1 INHERITANCE

 Mail::Message::Field::Flex
   is a Mail::Message::Field
   is a Mail::Reporter

=head1 DESCRIPTION

This is the flexible implementation of a field: it can easily be
extended because it stores its data in a hash and the constructor
(C<new>) and initializer (C<init>) are split.  However, you pay the
price in performance.  L<Mail::Message::Field::Fast|Mail::Message::Field::Fast> is faster (as the
name predicts).

=head1 OVERLOADED

=over 4

=item overload: B<"">

See L<Mail::Message::Field/"OVERLOADED">

=item overload: B<+0>

See L<Mail::Message::Field/"OVERLOADED">

=item overload: B<<=>>

See L<Mail::Message::Field/"OVERLOADED">

=item overload: B<bool>

See L<Mail::Message::Field/"OVERLOADED">

=item overload: B<cmp>

See L<Mail::Message::Field/"OVERLOADED">

=back

=head1 METHODS

=head2 Constructors

=over 4

=item $obj-E<gt>B<clone>

See L<Mail::Message::Field/"Constructors">

=item Mail::Message::Field::Flex-E<gt>B<new>(DATA)

If you stick to this flexible class of header fields, you have a bit
more facilities than with L<Mail::Message::Field::Fast|Mail::Message::Field::Fast>.  Amongst it, you
can specify options with the creation.  Possible arguments:

=over 4

=item * B<new> LINE

ass a LINE as it could be found in a file: a (possibly folded) line
which is terminated by a new-line.

=item * B<new> NAME, (BODY|OBJECTS), [ATTRIBUTES], OPTIONS

A set of values which shape the line.

=back

To be able to distinguish the different parameters, you will have
to specify the OPTIONS as ARRAY of option pairs, or HASH of options.
The ATTRIBUTES are a flat list of key-value pairs.  The body is
specified as one BODY string, one OBJECT, or a reference to an array
of OBJECTS.  See L<Mail::Message::Field|Mail::Message::Field>:

 -Option    --Defined in     --Default
  attributes                   []
  comment                      undef
  log         Mail::Reporter   'WARNINGS'
  trace       Mail::Reporter   'WARNINGS'

=over 2

=item attributes => ATTRS

Reference to array with list of key-value pairs representing attributes,
or reference to a hash containing these pairs.  This is an alternative
notation for specifying ATTRIBUTES directly as method arguments.

=item comment => STRING

A pre-formatted list of attributes.

=item log => LEVEL

=item trace => LEVEL

=back

=back

=head2 The field

=over 4

=item $obj-E<gt>B<isStructured>

=item Mail::Message::Field::Flex-E<gt>B<isStructured>

See L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<length>

See L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<nrLines>

See L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<print>([FILEHANDLE])

See L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<size>

See L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<string>([WRAP])

See L<Mail::Message::Field/"The field">

=item $obj-E<gt>B<toDisclose>

See L<Mail::Message::Field/"The field">

=back

=head2 Access to the name

=over 4

=item $obj-E<gt>B<Name>

See L<Mail::Message::Field/"Access to the name">

=item $obj-E<gt>B<name>

See L<Mail::Message::Field/"Access to the name">

=item $obj-E<gt>B<wellformedName>([STRING])

See L<Mail::Message::Field/"Access to the name">

=back

=head2 Access to the body

=over 4

=item $obj-E<gt>B<body>

See L<Mail::Message::Field/"Access to the body">

=item $obj-E<gt>B<folded>

See L<Mail::Message::Field/"Access to the body">

=item $obj-E<gt>B<foldedBody>([BODY])

See L<Mail::Message::Field/"Access to the body">

=item $obj-E<gt>B<stripCFWS>([STRING])

=item Mail::Message::Field::Flex-E<gt>B<stripCFWS>([STRING])

See L<Mail::Message::Field/"Access to the body">

=item $obj-E<gt>B<unfoldedBody>([BODY, [WRAP]])

See L<Mail::Message::Field/"Access to the body">

=back

=head2 Access to the content

=over 4

=item $obj-E<gt>B<addresses>

See L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<attribute>(NAME [, VALUE])

See L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<attributes>

See L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<comment>([STRING])

See L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<study>

See L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<toDate>([TIME])

=item Mail::Message::Field::Flex-E<gt>B<toDate>([TIME])

See L<Mail::Message::Field/"Access to the content">

=item $obj-E<gt>B<toInt>

See L<Mail::Message::Field/"Access to the content">

=back

=head2 Other methods

=over 4

=item $obj-E<gt>B<dateToTimestamp>(STRING)

=item Mail::Message::Field::Flex-E<gt>B<dateToTimestamp>(STRING)

See L<Mail::Message::Field/"Other methods">

=back

=head2 Internals

=over 4

=item $obj-E<gt>B<consume>(LINE | (NAME,BODY|OBJECTS))

See L<Mail::Message::Field/"Internals">

=item $obj-E<gt>B<defaultWrapLength>([LENGTH])

See L<Mail::Message::Field/"Internals">

=item $obj-E<gt>B<fold>(NAME, BODY, [MAXCHARS])

=item Mail::Message::Field::Flex-E<gt>B<fold>(NAME, BODY, [MAXCHARS])

See L<Mail::Message::Field/"Internals">

=item $obj-E<gt>B<setWrapLength>([LENGTH])

See L<Mail::Message::Field/"Internals">

=item $obj-E<gt>B<stringifyData>(STRING|ARRAY|OBJECTS)

See L<Mail::Message::Field/"Internals">

=item $obj-E<gt>B<unfold>(STRING)

See L<Mail::Message::Field/"Internals">

=back

=head2 Error handling

=over 4

=item $obj-E<gt>B<AUTOLOAD>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<addReport>(OBJECT)

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

=item Mail::Message::Field::Flex-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<errors>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<log>([LEVEL [,STRINGS]])

=item Mail::Message::Field::Flex-E<gt>B<log>([LEVEL [,STRINGS]])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logPriority>(LEVEL)

=item Mail::Message::Field::Flex-E<gt>B<logPriority>(LEVEL)

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logSettings>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<notImplemented>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<report>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<reportAll>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<trace>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<warnings>

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

=over 4

=item $obj-E<gt>B<DESTROY>

See L<Mail::Reporter/"Cleanup">

=item $obj-E<gt>B<inGlobalDestruction>

See L<Mail::Reporter/"Cleanup">

=back

=head1 DIAGNOSTICS

=over 4

=item Warning: Field content is not numerical: $content

The numeric value of a field is requested (for instance the C<Lines> or
C<Content-Length> fields should be numerical), however the data contains
weird characters.

=item Warning: Illegal character in field name $name

A new field is being created which does contain characters not permitted
by the RFCs.  Using this field in messages may break other e-mail clients
or transfer agents, and therefore mutulate or extinguish your message.

=item Error: Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.099,
built on July 07, 2011. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2011 by Mark Overmeer. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

