=head1 NAME

Mail::Message::TransferEnc::Binary - encode/decode binary message bodies

=head1 INHERITANCE

 Mail::Message::TransferEnc::Binary
   is a Mail::Message::TransferEnc
   is a Mail::Reporter

=head1 SYNOPSIS

 my Mail::Message $msg = ...;
 my $decoded = $msg->decoded;
 my $encoded = $msg->encode(transfer => 'binary');

=head1 DESCRIPTION

Encode or decode message bodies for binary transfer encoding.  This is
totally no encoding.

=head1 METHODS

=head2 Constructors

=over 4

=item Mail::Message::TransferEnc::Binary-E<gt>B<new>(OPTIONS)

See L<Mail::Reporter/"Constructors">

=back

=head2 The Encoder

=over 4

=item Mail::Message::TransferEnc::Binary-E<gt>B<addTransferEncoder>(TYPE, CLASS)

See L<Mail::Message::TransferEnc/"The Encoder">

=item $obj-E<gt>B<create>(TYPE, OPTIONS)

See L<Mail::Message::TransferEnc/"The Encoder">

=item $obj-E<gt>B<name>

See L<Mail::Message::TransferEnc/"The Encoder">

=back

=head2 Encoding

=over 4

=item $obj-E<gt>B<check>(BODY, OPTIONS)

See L<Mail::Message::TransferEnc/"Encoding">

=item $obj-E<gt>B<decode>(BODY [, OPTIONS])

See L<Mail::Message::TransferEnc/"Encoding">

=item $obj-E<gt>B<encode>(BODY, OPTIONS)

See L<Mail::Message::TransferEnc/"Encoding">

=back

=head2 Error handling

=over 4

=item $obj-E<gt>B<AUTOLOAD>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<addReport>(OBJECT)

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

=item Mail::Message::TransferEnc::Binary-E<gt>B<defaultTrace>([LEVEL]|[LOGLEVEL, TRACELEVEL]|[LEVEL, CALLBACK])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<errors>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<log>([LEVEL [,STRINGS]])

=item Mail::Message::TransferEnc::Binary-E<gt>B<log>([LEVEL [,STRINGS]])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logPriority>(LEVEL)

=item Mail::Message::TransferEnc::Binary-E<gt>B<logPriority>(LEVEL)

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<logSettings>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<notImplemented>

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<report>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<reportAll>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<trace>([LEVEL])

See L<Mail::Reporter/"Error handling">

=item $obj-E<gt>B<warnings>

See L<Mail::Reporter/"Error handling">

=back

=head2 Cleanup

=over 4

=item $obj-E<gt>B<DESTROY>

See L<Mail::Reporter/"Cleanup">

=item $obj-E<gt>B<inGlobalDestruction>

See L<Mail::Reporter/"Cleanup">

=back

=head1 DIAGNOSTICS

=over 4

=item Error: Decoder for transfer encoding $type does not work: $@

Compiling the required transfer encoding resulted in errors, which means
that the decoder can not be used.

=item Warning: No decoder for transfer encoding $type.

A decoder for the specified type of transfer encoding is not implemented.

=item Error: Package $package does not implement $method.

Fatal error: the specific package (or one of its superclasses) does not
implement this method where it should. This message means that some other
related classes do implement this method however the class at hand does
not.  Probably you should investigate this and probably inform the author
of the package.

=back

=head1 SEE ALSO

This module is part of Mail-Box distribution version 2.099,
built on July 07, 2011. Website: F<http://perl.overmeer.net/mailbox/>

=head1 LICENSE

Copyrights 2001-2011 by Mark Overmeer. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

