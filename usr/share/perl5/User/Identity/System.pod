=head1 NAME

User::Identity::System - physical system of a person

=head1 INHERITANCE

 User::Identity::System
   is a User::Identity::Item

=head1 SYNOPSIS

 use User::Identity;
 use User::Identity::System;
 my $me   = User::Identity->new(...);
 my $server = User::Identity::System->new(...);
 $me->add(system => $server);

 # Simpler

 use User::Identity;
 my $me   = User::Identity->new(...);
 my $addr = $me->add(system => ...);

=head1 DESCRIPTION

The C<User::Identity::System> object contains the description of the
user's presence on a system.  The systems are collected
by an L<User::Identity::Collection::Systems|User::Identity::Collection::Systems> object.

Nearly all methods can return undef.

=head1 METHODS

=head2 Constructors

User::Identity::System-E<gt>B<new>([NAME], OPTIONS)

=over 4

Create a new system.  You can specify a name as first argument, or
in the OPTION list.  Without a specific name, the organization is used as name.

 Option     --Defined in     --Default
 description  User::Identity::Item  undef
 hostname                      'localhost'
 location                      undef
 name         User::Identity::Item  <required>
 os                            undef
 parent       User::Identity::Item  undef
 password                      undef
 username                      undef

. description => STRING

. hostname => DOMAIN

=over 4

The hostname of the described system.  It is prefered to use full
system names, not abbreviations.  For instance, you can better use
C<www.tux.aq> than C<www> to avoid confusion.

=back

. location => NICKNAME|OBJECT

=over 4

The NICKNAME of a location which is defined for the same user.  You can
also specify a L<User::Identity::Location|User::Identity::Location> OBJECT.

=back

. name => STRING

. os => STRING

=over 4

The name of the operating system which is run on the server.  It is
adviced to use the names as used by Perl's C<$^O> variable.  See the
perlvar man-page for this variable, and perlport for the possible
values.

=back

. parent => OBJECT

. password => STRING

=over 4

The password to be used to login.  This password must be un-encoded:
directly usable.  Be warned that storing un-encoded passwords is a
high security list.

=back

. username => STRING

=over 4

The username to be used to login to this host.

=back

=back

=head2 Attributes

$obj-E<gt>B<description>

=over 4

See L<User::Identity::Item/"Attributes">

=back

$obj-E<gt>B<hostname>

=over 4

=back

$obj-E<gt>B<location>

=over 4

Returns the object which describes to which location this system relates.
The location may be used to find the name of the organization involved, or
to create a signature.  If no location is specified, undef is returned.

=back

$obj-E<gt>B<name>([NEWNAME])

=over 4

See L<User::Identity::Item/"Attributes">

=back

$obj-E<gt>B<os>

=over 4

=back

$obj-E<gt>B<password>

=over 4

=back

$obj-E<gt>B<username>

=over 4

=back

=head2 Collections

$obj-E<gt>B<add>(COLLECTION, ROLE)

=over 4

See L<User::Identity::Item/"Collections">

=back

$obj-E<gt>B<addCollection>(OBJECT | ([TYPE], OPTIONS))

=over 4

See L<User::Identity::Item/"Collections">

=back

$obj-E<gt>B<collection>(NAME)

=over 4

See L<User::Identity::Item/"Collections">

=back

$obj-E<gt>B<find>(COLLECTION, ROLE)

=over 4

See L<User::Identity::Item/"Collections">

=back

$obj-E<gt>B<parent>([PARENT])

=over 4

See L<User::Identity::Item/"Collections">

=back

$obj-E<gt>B<removeCollection>(OBJECT|NAME)

=over 4

See L<User::Identity::Item/"Collections">

=back

$obj-E<gt>B<type>

User::Identity::System-E<gt>B<type>

=over 4

See L<User::Identity::Item/"Collections">

=back

$obj-E<gt>B<user>

=over 4

See L<User::Identity::Item/"Collections">

=back

=head1 DIAGNOSTICS

Error: $object is not a collection.

=over 4

The first argument is an object, but not of a class which extends
L<User::Identity::Collection|User::Identity::Collection>.

=back

Error: Cannot load collection module for $type ($class).

=over 4

Either the specified $type does not exist, or that module named $class returns
compilation errors.  If the type as specified in the warning is not
the name of a package, you specified a nickname which was not defined.
Maybe you forgot the 'require' the package which defines the nickname.

=back

Error: Creation of a collection via $class failed.

=over 4

The $class did compile, but it was not possible to create an object
of that class using the options you specified.

=back

Error: Don't know what type of collection you want to add.

=over 4

If you add a collection, it must either by a collection object or a
list of options which can be used to create a collection object.  In
the latter case, the type of collection must be specified.

=back

Warning: No collection $name

=over 4

The collection with $name does not exist and can not be created.

=back

=head1 SEE ALSO

This module is part of User-Identity distribution version 0.93,
built on December 24, 2009. Website: F<http://perl.overmeer.net/userid/>

=head1 LICENSE

Copyrights 2003,2004,2007-2009 by Mark Overmeer <perl@overmeer.net>. For other contributors see Changes.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

