--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "Document-method: Iconv#iconv"
- !ruby/struct:SM::Flow::P 
  body: Converts string and returns the result.
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: If <tt>str</tt> is a String, converts <tt>str[start, length]</tt> and returns the converted string.
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: If <tt>str</tt> is <tt>nil</tt>, places converter itself into initial shift state and just returns a string containing the byte sequence to change the output buffer to its initial shift state.
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: Otherwise, raises an exception.
  type: :BULLET
- !ruby/struct:SM::Flow::H 
  level: 3
  text: Parameters
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "str:"
    body: string to be converted, or nil
  - !ruby/struct:SM::Flow::LI 
    label: "start:"
    body: starting offset
  - !ruby/struct:SM::Flow::LI 
    label: "length:"
    body: conversion length; nil or -1 means whole the string from start
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 3
  text: Exceptions
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: IconvIllegalSequence
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: IconvInvalidCharacter
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: IconvOutOfRange
  type: :BULLET
- !ruby/struct:SM::Flow::H 
  level: 3
  text: Examples
- !ruby/struct:SM::Flow::P 
  body: See the Iconv documentation.
full_name: Iconv#iconv
is_singleton: false
name: iconv
params: " iconv(str, start=0, length=-1)\n"
visibility: public
